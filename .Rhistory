shiny::runApp()
runApp()
data <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv", na.strings = "", fileEncoding = "UTF-8-BOM")
View(data)
str(data)
teste <- pfizer %>% filter(countriesAndTerritories == "Portugal")
teste <- data %>% filter(countriesAndTerritories == "Portugal")
teste <- filter(data,countriesAndTerritories == "Portugal")
teste <- data %>%
filter(countriesAndTerritories == "Portugal")
filter(data,countriesAndTerritories == "Portugal")
str(data)
runApp()
install.packages("dplyr")
library(dplyr)
runApp()
teste <- data %>%
filter(countriesAndTerritories == "Portugal")
View(teste)
View(data)
View(teste)
runApp()
data[dataRep]
data["dataRep"]
data["dateRep"]
str(data)
novoteste <- transform(teste,dateRep = as.Date(dateRep))
View(novoteste)
novoteste <- transform(teste,dateRep = as.Date(dateRep,format = "%d/%m/%y"))
View(novoteste)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x <-seq(novo['dateRep'])
novo <- transform(dadosapenasportugal,dateRep = as.Date(dateRep,format = "%d/%m/%y"))
dadosapenasportugal <- data %>%
filter(countriesAndTerritories == "Portugal")
novo <- transform(dadosapenasportugal,dateRep = as.Date(dateRep,format = "%d/%m/%y"))
x <-seq(novo['dateRep'])
print(x)
x <-c(novo['dateRep'])
print(x)
y <- c(novo['cases'])
y
plot(x,y)
clear
c
cl
runApp()
runApp()
str(dadosapenasportugal)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(pillar)
detach("package:pillar", unload = TRUE)
library(dplyr)
runApp()
runApp()
View(dadosapenasportugal)
install.packages("ggplot2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
